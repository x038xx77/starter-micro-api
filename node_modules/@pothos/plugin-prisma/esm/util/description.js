/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */ import { getFieldData, getModel } from './datamodel.js';
export function getFieldDescription(model, builder, fieldName, description) {
    const { exposeDescriptions } = builder.options.prisma;
    const usePrismaDescription = exposeDescriptions === true || typeof exposeDescriptions === "object" && (exposeDescriptions === null || exposeDescriptions === void 0 ? void 0 : exposeDescriptions.fields) === true;
    return (usePrismaDescription ? description !== null && description !== void 0 ? description : getFieldData(model, builder, fieldName).documentation : description) || undefined;
}
export function getModelDescription(model, builder, description) {
    const { exposeDescriptions } = builder.options.prisma;
    const usePrismaDescription = exposeDescriptions === true || typeof exposeDescriptions === "object" && (exposeDescriptions === null || exposeDescriptions === void 0 ? void 0 : exposeDescriptions.models) === true;
    return (usePrismaDescription ? description !== null && description !== void 0 ? description : getModel(model, builder).documentation : description) || undefined;
}
//# sourceMappingURL=description.js.map
