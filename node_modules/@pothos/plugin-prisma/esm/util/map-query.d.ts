import { GraphQLNamedType, GraphQLResolveInfo } from 'graphql';
import { SelectionMap } from '../types.js';
import { SelectionState } from './selections.js';
export declare function queryFromInfo<T extends SelectionMap["select"] | undefined = undefined>({ context, info, typeName, select, path, }: {
    context: object;
    info: GraphQLResolveInfo;
    typeName?: string;
    select?: T;
    path?: string[];
}): {
    select: T;
} | {
    include?: {};
};
export declare function selectionStateFromInfo(context: object, info: GraphQLResolveInfo, typeName?: string): SelectionState;
export declare function getIndirectType(type: GraphQLNamedType, info: GraphQLResolveInfo): GraphQLNamedType;
//# sourceMappingURL=map-query.d.ts.map
