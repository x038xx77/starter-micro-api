import { abstractReturnShapeKey, brandWithType, ObjectRef, typeBrandKey } from '@pothos/core';
export const prismaModelKey = Symbol.for("Pothos.prismaModelKey");
export class PrismaObjectRef extends ObjectRef {
    addBrand(value) {
        if (Array.isArray(value)) {
            value.forEach((val) => void brandWithType(val, this.name));
            return value;
        }
        brandWithType(value, this.name);
        return value;
    }
    hasBrand(value) {
        return typeof value === "object" && value !== null && typeBrandKey in value && value[typeBrandKey] === this.name;
    }
}
//# sourceMappingURL=object-ref.js.map
