/* eslint-disable no-continue */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "deepEqual", {
    enumerable: true,
    get: ()=>deepEqual
});
function deepEqual(left, right, ignore) {
    if (left === right) {
        return true;
    }
    if (left && right && typeof left === 'object' && typeof right === 'object') {
        if (Array.isArray(left)) {
            if (!Array.isArray(right)) {
                return false;
            }
            const { length  } = left;
            if (right.length !== length) {
                return false;
            }
            for(let i = 0; i < length; i += 1){
                if (!deepEqual(left[i], right[i])) {
                    return false;
                }
            }
            return true;
        }
        const keys = Object.keys(left);
        const keyLength = keys.length;
        if (keyLength !== Object.keys(right).length) {
            return false;
        }
        for (const key of keys){
            if (ignore === null || ignore === void 0 ? void 0 : ignore.has(key)) {
                continue;
            }
            if (!deepEqual(left[key], right[key])) {
                return false;
            }
        }
        return true;
    }
    return false;
}

//# sourceMappingURL=deep-equal.js.map